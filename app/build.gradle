apply plugin: 'com.android.application'
apply plugin: 'jacoco'
//apply plugin: 'jacoco-android'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    // useLibrary 'org.apache.http.legacy'
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        applicationId "com.example.marketplace"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
        // debug is new
    }

    testOptions {

        unitTests.all {

            jacoco {
                includeNoLocationClasses = true

            }

        }

    }


}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13'


    implementation 'androidx.appcompat:appcompat:1.3.0-alpha01'
    implementation 'androidx.cardview:cardview:1.0.0'
//    noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    
    //noinspection GradleDependency
    testImplementation "org.jacoco:org.jacoco.agent:0.8.4"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'org.mockito:mockito-android:2.27.0'
    androidTestImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation  'org.mockito:mockito-android:2.27.0'
    androidTestImplementation 'com.linkedin.testbutler:test-butler-library:2.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'org.robolectric:robolectric:4.2.1'
    //testImplementation 'org.robolectric:shadows-support-v4:3.0'
    implementation 'com.google.dagger:dagger-android:2.20'
    implementation 'com.google.dagger:dagger-android-support:2.20' // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.20'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.20'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0-rc01'
    debugImplementation 'androidx.fragment:fragment-testing:1.3.0-alpha05'
}
jacoco {
    toolVersion = "0.8.4"
    //reportsDir = file("$buildDir/customJacocoReportDir")
}


tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    //noinspection GrDeprecatedAPIUsage
    sourceDirectories = files([mainSrc])
    //noinspection GrDeprecatedAPIUsage
    classDirectories = files([debugTree])
    //noinspection GrDeprecatedAPIUsage
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
    ])
}
